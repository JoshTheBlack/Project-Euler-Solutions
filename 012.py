# coding=utf-8
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?
from comm import timed
from sympy import divisor_count

def tri(n):
    return ((n+1)*(n)//2) 

@timed
def p012():
    stop = 0
    count = 0

    while stop < 500:
        count += 1
        tnum = tri(count)
        stop = divisor_count(tnum)
        if stop >= 500:
            return f"{int(tnum)} is the {count} triangle number and has {stop} divisors"

if __name__ == "__main__":
    print(p012())