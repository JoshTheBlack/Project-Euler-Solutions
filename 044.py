# coding=utf-8
# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised;
# what is the value of D?
from comm import timed

calcPent = lambda x: x*(3*x-1)/2

def isPent(x):
    y = (((24 * x) + 1)**0.5 + 1) / 6
    if y - int(y) == 0:
        return True
    else:
        return False

@timed
def p44():
    flag = False
    for j in range(1,3000):
        for k in range(j+1,3000):
            if isPent(calcPent(k) - calcPent(j)) and isPent(calcPent(j) + calcPent(k)):
                return int(calcPent(k) - calcPent(j)), j, k

print(p44())